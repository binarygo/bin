#ifndef INCLUDED_<%= @pkg.upcase %>_NONTERMINAL_TYPE_H
#define INCLUDED_<%= @pkg.upcase %>_NONTERMINAL_TYPE_H

#include <string>

namespace <%= @pkg %> {

struct NonterminalType
{
    // TYPES
    enum Value
    {
<% @nonterminal_types.each_with_index do |nonterminal_type, index| %>
        <%= nonterminal_type.upcase %> = <%= index %><% if index < @nonterminal_types.size-1 %>,<% end %>

<% end %>
    };

    // CLASS METHODS
    static bool fromInt(Value* v, int i);
    static bool fromString(Value* v, const std::string& s);
    static int toInt(Value v);
    static std::string toString(Value v);
};

} // close namespace <%= @pkg %>


#endif // INCLUDED_<%= @pkg.upcase %>_NONTERMINAL_TYPE_H
