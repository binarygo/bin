#ifndef <%= @h_guard %>

#define <%= @h_guard %>


#include <memory>
#include <string>

namespace <%= @pkg %> {

class <%= @class_name %>
{
pubic:
    // TYPES
    typedef std::unique_ptr<<%= @class_name %>> UP;
    typedef std::shared_ptr<<%= @class_name %>> SP;

private:
    // DATA

private:
    // NOT IMPLEMENTED
    // <%= @class_name %>(const <%= @class_name %>& other);
    // <%= @class_name %>& operator= (const <%= @class_name %>& rhs);        

public:
    // CREATORS
    <%= @class_name %>();
    ~<%= @class_name %>();
    <%= @class_name %>(const <%= @class_name %>& other);

    // MANIPULATORS
    <%= @class_name %>& operator= (const <%= @class_name %>& rhs);    
};

} // close namespace <%= @pkg %>

#endif // <%= @h_guard %>